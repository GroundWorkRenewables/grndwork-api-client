version: 2.1

jobs:
  test:
    docker:
      - image: cimg/python:3.9-node
    steps:
      - checkout

      - restore_cache:
          name: Restore node package cache
          keys:
            - node-packages-v1-{{ checksum "package-lock.json" }}
            - node-packages-v1-

      - restore_cache:
          name: Restore python package cache
          keys:
            - python-packages-v1-{{ checksum "Pipfile.lock" }}
            - python-packages-v1-

      - run:
          name: Install test dependencies
          command: |
            npm install
            pipenv sync --dev
            npm install --no-save jest-junit

      - save_cache:
          name: Save node package cache
          key: node-packages-v1-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm/

      - save_cache:
          name: Save python package cache
          key: python-packages-v1-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.virtualenvs

      - run:
          name: Run tests
          command: |
            mkdir -p ./test-results/junit

            npm run pretest
            npm run test:jest -- --ci --runInBand --reporters=default --reporters=jest-junit
            npm run test:pytest -- --junitxml=./test-results/junit/pytest-results.xml
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./test-results/junit/
            JEST_JUNIT_OUTPUT_NAME: jest-results.xml

      - store_test_results:
          path: ./test-results/

  build:
    docker:
      - image: cimg/python:3.9-node

    steps:
      - checkout

      - restore_cache:
          name: Restore node package cache
          keys:
            - node-packages-v1-{{ checksum "package-lock.json" }}
            - node-packages-v1-

      - restore_cache:
          name: Restore python package cache
          keys:
            - python-packages-v1-{{ checksum "Pipfile.lock" }}
            - python-packages-v1-

      - run:
          name: Install build dependencies
          command: |
            npm install
            pipenv sync --dev

      - save_cache:
          name: Save node package cache
          key: node-packages-v1-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm/

      - save_cache:
          name: Save python package cache
          key: python-packages-v1-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.virtualenvs

      - run:
          name: Run Build
          command: |
            npm run build

      - run:
          name: Publish tagged release
          command: |
            if [[ $CIRCLE_TAG =~ ^v[0-9].* ]]; then
              case $CIRCLE_TAG in
                *alpha*)
                  npm publish --access public --tag alpha
                  ;;
                *beta*)
                  npm publish --access public --tag beta
                  ;;
                *rc*)
                  npm publish --access public --tag next
                  ;;
                *)
                  npm publish --access public --tag latest
                  ;;
              esac
            fi

workflows:
  main:
    jobs:
      - test:
          filters:
            tags:
              only: /v[0-9].*/

      - build:
          requires:
            - test
          filters:
            tags:
              only: /v[0-9].*/
